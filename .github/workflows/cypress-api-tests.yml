name: Cypress API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual trigger

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    name: Run API Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Cypress and reporting tools
        run: |
          npm install cypress --save-dev
          npm install mochawesome mochawesome-merge mochawesome-report-generator --save-dev

      - name: Run Cypress tests with reports
        run: |
          npm run cypress:run:reports
          npx mochawesome-merge mochawesome-report/*.json > mochawesome-report/output.json
          npx marge mochawesome-report/output.json -f report -o mochawesome-report

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results-${{ github.run_number }}
          path: |
            mochawesome-report/
            cypress/screenshots/

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-html-report-${{ github.run_number }}
          path: mochawesome-report/report.html

      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request' && always()
        with:
          script: |
            const fs = require('fs');
            
            try {
              const results = JSON.parse(fs.readFileSync('mochawesome-report/output.json', 'utf8'));
              const stats = results.stats;
              const successRate = ((stats.passes / stats.tests) * 100).toFixed(2);
              
              const status = stats.failures === 0 ? '‚úÖ' : '‚ùå';
              
              const comment = `## ${status} API Test Results
              
              **Summary:**
              - ‚úÖ **Passed:** ${stats.passes}
              - ‚ùå **Failed:** ${stats.failures}
              - ‚è≠Ô∏è **Skipped:** ${stats.skipped}
              - üìä **Success Rate:** ${successRate}%
              - ‚è±Ô∏è **Duration:** ${stats.duration}ms
              
              **Test Files:**
              ${results.results.map(result => `- \`${result.file}\` (${result.stats.passes}/${result.stats.tests} passed)`).join('\n')}
              
              üìã [View Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read test results:', error.message);
            }

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## ‚ùå API Tests Failed
            
            Some API tests have failed. Please check the [test results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.
            
            **Next Steps:**
            1. Review the test failures
            2. Check if the API endpoints are working correctly
            3. Verify the test data and schemas
            4. Re-run the tests after fixes`;
            
            if (context.eventName === 'pull_request') {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

  test-summary:
    runs-on: ubuntu-latest
    needs: cypress-run
    if: always()
    name: Generate Test Summary
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: cypress-results-${{ github.run_number }}

      - name: Generate test summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const results = JSON.parse(fs.readFileSync('mochawesome-report/output.json', 'utf8'));
              const stats = results.stats;
              const successRate = ((stats.passes / stats.tests) * 100).toFixed(2);
              
              console.log(`üìä Test Summary:`);
              console.log(`   Total Tests: ${stats.tests}`);
              console.log(`   Passed: ${stats.passes}`);
              console.log(`   Failed: ${stats.failures}`);
              console.log(`   Skipped: ${stats.skipped}`);
              console.log(`   Success Rate: ${successRate}%`);
              console.log(`   Duration: ${stats.duration}ms`);
              
              // Set output for other jobs
              core.setOutput('total-tests', stats.tests);
              core.setOutput('passed-tests', stats.passes);
              core.setOutput('failed-tests', stats.failures);
              core.setOutput('success-rate', successRate);
              core.setOutput('duration', stats.duration);
              
            } catch (error) {
              console.log('Could not read test results:', error.message);
            }
